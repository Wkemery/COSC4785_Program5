
class Test0 {}

//---------------------------------------

class Test1{int x;}
class Test2{int[] x;}
class Test3{int[][][][] x;}
class Test4{cat x;}
class Test5{cat[] x;}
class Test6{cat[][][][] x;}

//---------------------------------------

class Test7{constr () {}}

class Test8{constr () {int x;}} class Test9{constr () {int[] x;}} class Test10{constr () {int[][][] x;}}
class Test11{constr () {id x;}} class Test12{constr () {id[] x;}} class Test13{constr () {id[][][] x;}}

class Test14{constr () {int x; int y; int z;}}
class Test15{constr () {int[] x; int[] y; int[] z;}}
class Test16{constr () {int[][][] x; int[][][] y; int[][][] z;}}

class Test17{constr () {id x; id y; id z;}}
class Test18{constr () {id[] x; id[] y; id[] z;}}
class Test19{constr () {id[][][] x; id[][][] y; id[][][] z;}}
class Test20{constr () {int[] x; id[][] y; id z; int c;}}

class Test21{constr(int t1){int x;}}
class Test22{constr(int t1, int t2, int t3){int x;}}
class Test21{constr(type t1){int x;}}
class Test22{constr(type t1, type t2, type t3){int x;}}

// //---------------------------------------

class Test23{int method(){}}
class Test24{int method(int x){}}
class Test25{int method(int x){int y;}}
class Test26{int method(int[] x){int y;}}
class Test27{int method(int[][][] x){int y;}}
class Test28{int method(int x, int y, int z){int c;}}

class Test30{id method(id x){}}
class Test31{id method(id x){id y;}}
class Test32{id method(id[] x){id y;}}
class Test33{id method(id[][][] x){id y;}}
class Test34{id method(id x, id y, id z){id c;}}

class Test35{void method(){}}
class Test36{void method(id[] x, int[][] y){id c; int z;}}

//---------------------------------------

class Test37{int x; constr(int t1, id t2){int[] x;}}
class Test38{int x; int y; constr(int t1, id t2){int[] x;} constr(id[][] t3, int[][][][] t4){id x;}}
class Test39{id x; id y; constr(int t1, id t2){int[] x;} constr(id[][] t3, int[][][][] t4){id x;}}

class Test40{int x; int method(){}}
class Test41{int x; int method(type t1, int[][] id2, type[] t3){ int x;}}
class Test42{int[][] x; id[][][][][][][][][][][] y; id method(type x2){} id method(type t1, type t2, int t3){int x;}}

class Test43{constr(){} id method(){}}
class Test44{constr(){int x;} constr(type t1, type t2, int x){int x; int y;} int method(type t1, int t2){int x; id y;} id method(type t1, int t2){} }

//---------------------------------------

// Statement Testing
// 
class Test45
{
    Constructor(int x, type y, int[] array)
    {
        int x1;
        id y1;
        ;
    }
}


class Test46
{
    Constructor()
    {
        a = name; b = 5; c = null; d = name(1,2,3+4*5); e = read();
        f = new identifier ( 1,2,3+4*5); g = new int; h = new int[]; 
        i = new int[][][]; j = new id[4]; k = new id[4][3+4*5][7];
        l = new id[45][67][][]; m = +5; n = !10; o = -4; p = ++5; q = --4;
        r = 6 < 7; s = 7 > 6; t = 7 <= 7; u = 7 >= 7; u1 = 7 == 7; u2 = 7!=1;
        v = 4+4; w = 4+4+4; x = +4+4; y = -4+4; z = 4+-4; aa = +4+-4;
        bb = 4-4; cc = 4-4-4; dd = -4-4; ee = +4-4; ff = 4-+4; gg = -4-+4;
        hh = 5+!6; ii = 4 || 7; kk = -4 || +7; ll = -4 || !7; mm = 4*4;
        nn = -4*4; oo = +4*4; pp = 4*4*-4; qq = 4/4; rr = -4/4; ss = +4/-4;
        tt = 4/4/-4; uu = 4%4; vv = -4%4; ww = +4%4; xx = 4%4%-4; yy = 4&&4;
        zz = -4 && -4; aaa = (4+5);
        
        
    }
}

// 
// 
// 
class Test47
{
    constr()
    {
        dog(4,5,read(),null, cat(4,5,6));
        print(this.id, this.id[56+7], this.id[this.id[6]], (4+5));
        
        if(x==5)
        {
            x = new id;
        }
        
        if(x == 7)
        {
            x = new id[][];
        }
        else
        {
            x = new int[][][];
        }
        
        while(x != 10)
        {
            x = x+1;
        }
    }
    
    void method()
    {
        return;
    }
}














/* more tests specifically class declarations with multiple things as well as more complex 
block structures including all sorts of statements expression etc. Start Simple and go super complex */



